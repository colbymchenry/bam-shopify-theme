{% style %}

  .peptides__container {
    display: flex;
    flex-direction: column;
    background-color: {{ section.settings.background_color }};
    padding-top: 36px;
    padding-bottom: 36px;
    cursor: pointer;
  }

  .peptides__container .combinations {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .peptides__container .combination {
    flex-basis: 33%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    position: relative;
  }

  .peptides__container .combination img {
    width: 100%;
    height: auto;
    object-fit: cover;
  }

  .modal-open::after {
    content: '';
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    position: fixed;
    animation: fadeIn 0.3s forwards;
    z-index: 1;
  }

  .peptides__container .combination::before {
    content: '';
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 1);
    opacity: 0;
    position: absolute;
    transition: all 0.3s ease;
    z-index: 1;
  }

   .peptides__container .combination:hover::before {
     opacity: 0.5;
     transition: all 0.3s ease;
   }

  .peptides__container .combination span {
    opacity: 0;
    transition: all 0.3s ease;
    color: white;
    z-index: 2;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    white-space: nowrap;
  }

  .peptides__container .combination span:last-of-type {
    margin-top: 2.75rem;
  }

  .peptides__container .combination:hover span {
    opacity: 1;
    transition: all 0.3s ease;
  }

  .peptide-modal {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    flex-direction: column;
    background-color: white;
    padding: 0 2vw;
    border-radius: 1rem;
    z-index: 3;
  }

  .peptide-modal.open {
    display: flex;
    animation: fadeInUp 0.3s forwards;
  }

  .peptide-modal button {
    outline: none;
    border: none;
    background: none;
    position: absolute;
    top: 1rem;
    right: 1rem;
    font-size: 28px;
    cursor: pointer;
  }
  
  @media screen and (max-width: 500px) {
    .peptides__container .title {
      margin-left: 1.5rem !important;
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    },
    to {
      opacity: 1;
    }
  }
  
  @keyframes fadeInUp {
    0% {
      display: none;
      visibility: hidden;
      opacity: 0;
      margin-top: 10rem;
    },
    1% {
      display: flex;
      visibility: visible;
    },
    100% {
      opacity: 1;
      margin-top: 0;
    }
  }

{% endstyle %}


<div class="peptides__container page-width">
  {% if section.settings.title != blank %}
  <h2 class="title title-wrapper--no-top-margin h1">{{ section.settings.title }}</h2>
  {% endif %}
  <div class="combinations">
  {%- for block in section.blocks -%}
    <div class="combination" onclick="triggerModal('peptide-modal-{{ forloop.index0 }}');">
      <img src="{{ block.settings.image | img_url: 'master' }}" loading="lazy" />
      <span><b>{{ block.settings.for }}</b></span>
      <span>{{ block.settings.hint }}</span>
    </div>

    <div class="peptide-modal" id="peptide-modal-{{ forloop.index0 }}">
      <button type="button" onclick="triggerModal('peptide-modal-{{ forloop.index0 }}');"><i class="fa-solid fa-xmark"></i></button>
      {{ block.settings.modal_content }}
    </div>
  {%- endfor -%}
  </div>
</div>

<script type="text/javascript">
  function triggerModal(modalId) {
    const wasOpen = document.getElementById(modalId).classList.contains("open");
    
    // close all other modals
    Array.from(document.getElementsByClassName("peptide-modal")).forEach((elem) => elem.classList.remove("open"));
    // open modal
    if (!wasOpen) {
      document.getElementById(modalId).classList.add("open");
      document.querySelector("BODY").classList.add("modal-open");
    } else {
      document.querySelector("BODY").classList.remove("modal-open");
    }
  }
</script>

{% schema %}
{
  "name": "Peptide Combinations",
  "max_blocks": 20,
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "FAQ"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#FFF"
    }
  ],
  "presets": [{
    "name": "Peptide Combinations",
    "category": "Text"
  }],
  "blocks": [
    {
      "type": "combination",
      "name": "Combination",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Tile Image"
        },
        {
          "type": "text",
          "id": "for",
          "label": "For?",
          "default": "Sleep"
        },
        {
          "type": "text",
          "id": "hint",
          "label": "Hint",
          "default": "DSIP, BSC17"
        },
        {
          "type": "richtext",
          "id": "modal_content",
          "label": "Popup Content",
          "default": "<p></p>"
        }
      ]
    }
  ]
}
{% endschema %}
