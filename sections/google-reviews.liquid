{% style %}

  .google-reviews {
    display: flex;
    width: 100%;
    flex-wrap: nowrap;
    gap: 20px;
  }

  .google-reviews .reviews__review {
    display: flex;
    overflow: hidden;
    min-width: 500px;
    max-width: 500px;
    min-height: 215px;
    max-height: 215px;

  }

  .google-reviews .content__rating {
    display: flex;
    align-items: center;
    gap: 10px;
  }

  .google-reviews .content__rating svg {
    transform: scale(0.5);
    fill: #DFB67A;
    color: #DFB67A;
  }

  .google-reviews .reviews__review img {
    flex-shrink: 1;
    width: 42px;
    height: 42px;
  }

  .google-reviews .reviews__review .content {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    padding-left: 20px;
  }

{% endstyle %}

<div class="google-reviews">
</div>

<div id="full-star" style="display: none;">{% include 'icon-star' %}</div>
<div id="half-star" style="display: none;">{% include 'icon-star__half' %}</div>

<script type="text/javascript">
  const reviewsURL = "{{ 'reviews.json' | asset_url }}";

  function getMultipleRandom(arr, num) {
    const shuffled = [...arr].sort(() => 0.5 - Math.random());

    return shuffled.slice(0, num);
  }

  document.addEventListener('DOMContentLoaded', async () => {
    const resp = await fetch(reviewsURL);
    let { name, rating, reviews, total_reviews } = await resp.json();

    if (reviews.length > 20) {
      reviews = getMultipleRandom(reviews, 20)
    }

    const reviews__container = document.querySelector('.google-reviews');

    reviews.forEach(({ reviewAuthor, reviewAuthorImage, reviewRating, reviewText, reviewDate}) => {

      let stars = '';

      for (let i = 0; i < reviewRating; i++) {
        stars += document.getElementById("full-star").innerHTML;
      }

      if (("" + reviewRating).includes(".")) {
        stars += document.getElementById("half-star").innerHTML;
      }

      reviews__container.innerHTML += `
      <div class="reviews__review">
         <img src="${reviewAuthorImage}" loading="lazy" alt="" />
         <div class="content">
            <span><b>${reviewAuthor}</b></span>
            <div class="content__rating">
            ${stars} ${reviewDate}
            </div>
            <p>${reviewText.length > 150 ? reviewText.substring(0, 150) + "..." : reviewText}</p>
         </div>
      </div>
      `;
    });

  }, false);
</script>

{% schema %}
{
  "name": "Google Reviews",
  "settings": [

  ],
  "presets": [{
    "name": "Google Reviews",
    "category": "Text"
  }]
}
{% endschema %}
